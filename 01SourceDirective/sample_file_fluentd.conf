# 1. 로그 수집 (Source Directive) - 파일 저장하는 간단한 예시
##
## [시간] Debug User ~ 형태의 로그가 담긴 /tmp/log/test.log 파일을 파싱하여, 
## /tmp/log/test 디렉토리에 60초 간격으로 로그 파일을 생성해서 저장하도록 FluentD를 설정하는 설정파일
<source> # input 
  @type tail ## 텍스트 파일 형태의 로그 파일을 읽어서 input으로 사용 (소스파일의 path와 tag 지정 필수)
  tag file.test ## * 사용 시 파일 경로로 대체
  path /tmp/log/test.log
  read_from_head true
  <parse> # parser (데이터 포맷 변경)
    @type /^\[(?<logtime>[^\]]*)\] (?<type>[^ ]*) (?<msg>.*)$/
    time_key logtime
    time_format %Y-%m-%d %H:%M:%S %z
  </parse>
</source>
<match **> # output (외부로 보내는)
  @type file
  path /tmp/log/test
  append true ## 파일 존재 시, 새로운 로그를 파일 끝에 덧붙이는 append 옵션 (file pulgin 옵션) 
                ### append ture :  로그가 한 파일에 기록되며 쌓임.
                ### append false : 기존 파일 덮어쓰기
  <buffer> ## 데이터를 일시적으로 저장하는 영역 지정
    @type memory    ### 버퍼 타입 지정 : RAM , 다른 옵션으로 file 존재
    timekey 60      ### 버퍼링 시간 설정 (60초) = 즉, 1분동안 모인 로그를 한번에 처리
    timekey_wait 10 ### 버퍼에서 데이터 비울 때 추가 대기 시간 설정 (10초) = 즉, 청크가 끝난 후 10초 기다린 후 데이터 전송 (데이터 손실 X)
  </buffer>
</match>