# 3. 로그 가공 ( Filter Directive )
## 
## 수집한 로그 데이터를 저장하기 전에 가공하는 방법
## 로그 데이터의 기존 필드값을 변경시키는 방법

<source>
  @type tail
  tag file.*
  path /log/game/*, /log/gateway/*
  <parse>
    @type /^\[(?<logtime>[^\]]*)\] (?<type>[^ ]*) (?<msg>.*)$/
    time_key logtime
    time_format %Y-%m-%d %H:%M:%S %z
  </parse>
</source>
<filter file.log.game.**>
  @type record_transformer ##
  enable_ruby ## 필터에서 루비 스크립트를 사용할 수 있게 기능을 활성화 시키는 부분
  <record>
    server_id ${tag_parts[3]}
    type ${record["type"].gsub('[', '').gsub(']', '')} ## type 필드값에서 대괄호를 제거하는 부분 ( gsub 루비 함수 호출)
                                                       #### gsub(찾을문자열, 바꿀문자열) : 문자열에서 찾을 문자열을 바꿀 문자열로 바꾸는 함수
  </record>
</filter>
<filter file.log.gateway.**>
  @type record_transformer
  enable_ruby
  <record>
    type ${record["type"].gsub('[', '').gsub(']', '')}
  </record>
</filter>
<match file.log.game.**>
  @type sql
  host 127.0.0.1
  port 3306
  database log
  adapter mysql2
  username root
  password changeme
  <table>
    table game_server
    column_mapping 'time:created_at, server_id:server_id, type:log_type, msg:msg'
  </table>
</match>
<match file.log.gateway.**>
  @type sql
  host 127.0.0.1
  port 3306
  database log
  adapter mysql2
  username root
  password changeme
  <table>
    table gateway_server
    column_mapping 'time:created_at, type:log_type, msg:msg'
  </table>
</match>